//======================
//Styles for button
//=======================

@mixin button-base-styles {
	font-family: inherit;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	white-space: nowrap;
	border-radius: 0.375rem; // rounded-md
	transition: colors 0.2s; // Smooth color transition
	gap: 0.5rem; // Space between text and icon if any
	font-weight: 600; // font-semibold
	border: 1px solid transparent;
	cursor: pointer;
	text-transform: capitalize;
}

// Variant-specific styles using nested maps
$button-variants: (
	"default": (
		"bg-color": var(--teal-600),
		// bg-teal-600
		"text-color": var(--white),
		// text-white
		"hover-bg-color": var(--teal-700) // bg-teal-600/90,,,,,,,,,,,,,,,
	),
	"outline": (
		"bg-color": transparent,
		"border-color": var(--gray-800),
		"text-color": var(--gray-800),
		"hover-bg-color": var(--slate-700),
	),
	"secondary": (
		"bg-color": var(--slate-700),
		"text-color": var(--white),
		"hover-bg-color": rgba(30, 41, 59, 0.9) // bg-slate-800/90,,,,,,,,,,,,,,,
	),
	"destructive": (
		"bg-color": var(--destructive-background),
		"text-color": var(--destructive),
		"hover-bg-color": var(--destructive-hover),
	),
);

// Size-specific styles
$button-sizes: (
	"sm": (
		"font-size": 0.75rem,
		// text-xs
		"padding": 0.65rem 1rem // px-3,,,,,,,,,,,,,,,
	),
	"md": (
		"font-size": var(--text-base),
		// Use variable for consistency
		"padding": 0.875rem 1rem // px-4,,,,,,,,,,,,,,,
	),
	"lg": (
		"font-size": var(--text-lg),
		// Use variable for consistency
		"padding": 1rem 1.5rem // p-4,,,,,,,,,,,,,,,
	),
);

// Mixin to generate variant and size styles
@mixin button-styles($variant: "default", $size: "md") {
	@include button-base-styles;

	// Apply variant-specific styles
	@each $name, $value in $button-variants {
		@if $variant == $name {
			background-color: map-get($value, "bg-color");
			color: map-get($value, "text-color");

			@if $variant == "outline" {
				border-color: map-get($value, "border-color");
			}

			&:hover {
				background-color: map-get($value, "hover-bg-color");
				color: var(--white);
			}
		}
	}

	// Apply size-specific styles
	@each $name, $value in $button-sizes {
		@if $size == $name {
			font-size: map-get($value, "font-size");
			padding: map-get($value, "padding");
		}
	}
}

